name: CI

on:
  pull_request:
    types: [ labeled ]
jobs:
  build:
    if: ${{ github.event.label.name == 'Build' }}
    environment: TEST_ENV
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:latest     
  deploy:
      if: ${{ github.event.label.name == 'Deploy' }}
      environment: TEST_ENV
      runs-on: ubuntu-latest
      steps:
        -
          name: Checkout
          uses: actions/checkout@v4
          
        - uses: isbang/compose-action@v1.5.1
          with:
            up-flags: -d
            compose-file: './compose.yaml'
            services: devnet
         
         # Installing NPM packages and running test
        - name: Install packages
          uses: actions/setup-node@v3
          with:
            node-version: '18.x'
        - name: Navigate to hardhat folder and install
          run: cd hardhat && npm install --save-dev hardhat
          continue-on-error: true
          
        - name: Deploy hardhat project
          run: cd hardhat && npm hardhat compile && npm hardhat run scripts/deploy.js --network devnet
          continue-on-error: true
          
        # - name: Login to Docker Hub
        #   #if: '!cancelled()'
        #   uses: docker/login-action@v3
        #   with:
        #     username: ${{ secrets.DOCKERHUB_USERNAME }}
        #     password: ${{ secrets.DOCKERHUB_TOKEN }}
        # -
        #   name: Build new image from running container
        #   run: docker commit $(docker ps | grep devnet | awk '{print $1}') ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:devnet_deployed
        # -  
        #   name: Pushing new image to registry
        #   run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:devnet_deployed

        # - name: Run Tests
        #   run: npx hardhat test

        - name: Stop containers
          if: '!cancelled()'
          run: docker-compose -f "./compose.yaml" down
  
    
