name: CI
on:
  pull_request:
    types: [ labeled ]

jobs:
  build:
    if: ${{ github.event.label.name == 'Build' }}
    environment: TEST_ENV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:devnet-img:latest
  deploy:
    if: ${{ github.event.label.name == 'Deploy' }}
    environment: TEST_ENV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: isbang/compose-action@v1.5.1
        with:
          up-flags: -d
          compose-file: './docker-compose.yaml'
      
      - name: Installing Nodejs packages
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      
      - name: Adding packages
        run: cd hardhat && npm install --save-dev hardhat
      - name: Installing Hardhat
        run: cd hardhat && npx hardhat compile && npx hardhat run scripts/deploy.js --network devnet2
        continue-on-error: true
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Build new image from running container
        run: docker commit $(docker ps | grep geth-bootnode | awk '{print $1}') ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:devnet_hardhat_bootnode \
             docker commit $(docker ps | grep geth-node1 | awk '{print $1}') ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:devnet_hardhat_node1 \
             docker commit $(docker ps | grep geth-node2 | awk '{print $1}') ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:devnet_hardhat_node2
      - name: Pushing new image to registry
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:devnet_hardhat_bootnode \
             docker push ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:devnet_hardhat_node1 \
             docker push ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:devnet_hardhat_node2
      - name: Stop containers
        if: '!cancelled()'
        run: docker-compose -f "./docker-compose.yaml" down
  testing:
    if: ${{ github.event.label.name == 'Test' }}
    environment: TEST_ENV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Running devnet/hardhat image  
        run: docker run -dit ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:devnet_hardhat
      
      - name: Installing Nodejs packages
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      
      - name: Adding packages
        run: cd hardhat && npm install --save-dev hardhat
      - name: Installing Hardhat
        run: cd hardhat && npx hardhat compile && npx hardhat run scripts/deploy.js --network devnet
        continue-on-error: true

      - name: Check if devnet is running
        run: docker ps
      - name: Hardhat unit test
        run: cd hardhat
      - name: Environment
        uses: actions/setup-node@v3
      - name: Test
        uses: ambersun1234/hardhat-test-action@v1
        with:
          network: devnet
          private_key: ${{ secrets.PRIVATE_KEY }}
          rpc_url: ${{ secrets.RPC_URL }}
       
      - name: Stop containers
        if: '!cancelled()'
        run: docker stop $(docker ps -q)
