name: CI
on:
  pull_request:
    types: [ labeled ]
jobs:
  build:
    environment: TEST_ENV
    if: ${{ github.event.label.name == 'Build' }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:latest     
  deploy:
      if: ${{ github.event.label.name == 'Deploy' }}
      runs-on: ubuntu-latest
      steps:
        -
          name: Checkout
          uses: actions/checkout@v4
          
        - uses: adrielcodeco/docker-compose-run-action@v1
          with:
            compose-file: './compose.yaml'
            service: devnet

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        -
          name: Build new image from running container
          run: docker commit $(docker ps | grep devnet | awk '{print $1}') ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:devnet_deployed
        -  
          name: Pushing new image to registry
          run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/go-ethereum:devnet_deploy
        
        # Installing packages and running test
        - name: Install packages
          uses: actions/setup-node@v3
          with:
            node-version: '18.x'
        - name: Deploy hardhat project
          run: npx hardhat run .hardhat/scripts/deploy.ts --network localhost
        
        - name: Run Tests
          run: npx hardhat test

        - name: Stop containers
          if: always()
          run: docker-compose -f "./compose.yml" down
  
    
